#! /usr/bin/env node

(async function () {
    'use strict';

    const {performance} = require('perf_hooks');
    const webviCLIStart = performance.now();

    const path = require('path');
    const process = require('process');
    const glob = require('glob');
    const fs = require('fs');
    const cheerio = require('cheerio');

    // Setup shared webvicli singleton config
    const webvicli = require('webvicli');
    const webvicliconfig = {
        setComponentPath: webvicli.setComponentPath,
        setClientPath: webvicli.setClientPath
    };
    const VireoNode = webvicli.VireoNode;

    // using the require('../src/webvicliconfig.js') didn't work because in vscode dev tools they were resulting in different paths
    // for the relative require it had a lowercase c:/ and for this version it has C:/ and the case insensitivity broke the singleton
    // which I guess is expected: https://medium.com/@lazlojuly/are-node-js-modules-singletons-764ae97519af
    // I guess switch to a Symbol https://derickbailey.com/2016/03/09/creating-a-true-singleton-in-node-js-with-es6-symbols/
    // const webvicliconfig = require('../src/webvicliconfig.js');
    const serverName = process.argv[2] || 'Server_HelloWorld';
    const clientName = process.argv[3] || 'Client_HelloWorld';
    const cwd = process.cwd();
    console.log(`Current Working Directory: ${cwd}`);
    const componentPath = path.resolve(cwd, `Builds/${serverName}`).toString();
    const clientPath = path.resolve(cwd, `Builds/${clientName}`).toString();
    webvicliconfig.setComponentPath(componentPath);
    webvicliconfig.setClientPath(clientPath);
    console.log(`Web Application Component Path: ${componentPath}`);
    console.log(`Web Application Client Path: ${clientPath}`);

    console.log('Searching for node dependencies...');
    const htmlPaths = glob.sync('**/*.html', {cwd: componentPath});
    const dependencyPathSet = new Set();
    htmlPaths.forEach(function (htmlPath) {
        const resolvedHtmlPath = path.resolve(componentPath, htmlPath);
        const resolvedHtmlDir = path.dirname(resolvedHtmlPath);
        const endpointHTML = fs.readFileSync(resolvedHtmlPath, 'utf8');
        const $$ = cheerio.load(endpointHTML);
        const rawDependencyPaths = [];
        $$('script[webvi-express-require]').each(function (index, element) {
            const src = $$(element).attr('src');
            // Seems to be formatted with windows path format
            const normalized = src.replace(/\\/g, '/');
            rawDependencyPaths.push(normalized);
        });
        const dependencyPaths = rawDependencyPaths.map((rawDependencyPath) => path.resolve(resolvedHtmlDir, rawDependencyPath));
        dependencyPaths.forEach((dependencyPath) => dependencyPathSet.add(dependencyPath));
    });
    console.log('Finished searching for node dependencies.');

    console.log('Discovered node dependencies:');
    dependencyPathSet.forEach(dependencyPath => console.log(dependencyPath));

    console.log('Loading node dependencies...');
    dependencyPathSet.forEach(dependencyPath => require(dependencyPath));
    console.log('Finished loading node dependencies.');

    console.log('Searching for WebVICLI Main VI');
    const viaPaths = glob.sync('**/main.via.txt', {cwd: componentPath});
    if (viaPaths.length !== 1) {
        throw new Error('Expected to find exactly one WebVICLI Main VI (main.via.txt)');
    }
    const viaPath = viaPaths[0];
    console.log('Finished searching for WebVICLI Main VI.');

    console.log('Discoverd WebVICLI Main VI:');
    console.log(viaPath);

    console.log('Loading WebVICLI Main VI...');
    const viaWithEnqueue = fs.readFileSync(path.resolve(componentPath, viaPath), 'utf8');
    // const VireoNode = require('../src/VireoNode.js');
    const vireoNode = new VireoNode(viaWithEnqueue);
    await vireoNode.initialize();
    console.log('Finished loading WebVICLI Main VI.');

    console.log('Running WebVICLI Main VI...');
    console.log('---------------------------');
    vireoNode.enqueueVI();
    await vireoNode.vireo.eggShell.executeSlicesUntilClumpsFinished();
    console.log('----------------------------------');
    console.log('Finished running WebVICLI Main VI.');
    const webviCLIEnd = performance.now();
    const SECONDS_PER_MILLISECOND = 1000;
    console.log(`WebVICLI took ${(webviCLIEnd - webviCLIStart) / SECONDS_PER_MILLISECOND} seconds to run.`);
}()).catch(function (ex) {
    'use strict';
    console.error(ex);
});
